name: acidc

services:

  postgres:
    container_name: acidc-postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      PGUSER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s
    volumes:
      - ${POSTGRES_DATA}:/var/lib/postgresql/data
      - ${POSTGRES_INITDB_DATABASE_DIRECTORY}:/docker-entrypoint-initdb.d
    networks:
      - acidc-network

  influxdbv2:
    container_name: acidc-influxdbv2
    image: influxdb:2.7.1
    restart: always
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDBv2_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDBv2_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDBv2_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDBv2_BUCKET}
      DOCKER_INFLUXDB_INIT_RETENTION: ${INFLUXDBv2_RETENTION}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDBv2_TOKEN}
      V1_AUTH_USERNAME: ${V1_AUTH_USERNAME}
      V1_AUTH_PASSWORD: ${V1_AUTH_PASSWORD}
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 3s
      timeout: 10s
      retries: 5
    volumes:
      - ${INFLUXDBv2_DATA}:/var/lib/influxdb2
      - ${INFLUXDBv2_INIT_CONFIG}:/etc/influxdb2
      - ${INFLUXDBv2_SCRIPTS}:/docker-entrypoint-initdb.d
    networks:
      - acidc-network

  # influxdbv1:
  #   container_name: acidc-influxdbv1
  #   image: influxdb:1.8
  #   restart: always
  #   ports:
  #     - 8087:8086
  #   environment:
  #     INFLUXDB_ADMIN_ENABLED: true
  #     INFLUXDB_ADMIN_USER: ${INFLUXDBv1_USERNAME}
  #     INFLUXDB_ADMIN_PASSWORD: ${INFLUXDBv1_PASSWORD}
  #     INFLUXDB_DB: ${INFLUXDBv1_DB}
  #     INFLUXDB_USER: ${V1_AUTH_USERNAME}
  #     INFLUXDB_USER_PASSWORD: ${V1_AUTH_PASSWORD}
  #   healthcheck:
  #     test: "curl -f http://localhost:8086/ping"
  #     interval: 3s
  #     timeout: 10s
  #     retries: 5
  #   volumes:
  #     - ${INFLUXDBv1_DATA}:/var/lib/influxdb
  #     - ${INFLUXDBv1_INIT_CONFIG}:/etc/influxdb
  #   networks:
  #     - acidc-network

  # chronograf:
  #   container_name: acidc-chronograf
  #   image: chronograf:latest
  #   restart: always
  #   ports:
  #     - 8888:8888
  #   environment:
  #     - INFLUXDB_URL=${INFLUXDB_URL}
  #     - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
  #     - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
  #   depends_on:
  #     influxdbv1:
  #       condition: service_healthy
  #   volumes:
  #     - ${CHRONOGRAF_DATA}:/var/lib/chronograf
  #   networks:
  #     - acidc-network

  telegraf:
    container_name: acidc-telegraf
    image: telegraf:1.26
    volumes:
      - ${TELEGRAF_CONFIG}:/etc/telegraf
    depends_on:
      influxdbv2:
        condition: service_healthy
    networks:
      - acidc-network

  jaeger-all-in-one:
    container_name: acidc-jaeger-all-in-one
    image: jaegertracing/all-in-one:1.44
    hostname: jaeger-all-in-one
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    restart: on-failure
    environment:
      COLLECTOR_OTLP_ENABLED: ${OTLP_ENABLED}
      COLLECTOR_ZIPKIN_HOST_PORT: ${ZIPKIN_HOST_PORT}
    networks:
      - acidc-network

  grafana:
    container_name: acidc-grafana
    image: grafana/grafana:9.5.1
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ${GF_PROVISIONING_DIRECTORY}:/etc/grafana/provisioning
      - type: bind
        source: ${GF_VRF_DASHBOARD_PATH}
        target: /var/lib/grafana/dashboards/acidc/vrf-dashboard.json
    depends_on:
      postgres:
        condition: service_healthy
      influxdbv2:
        condition: service_healthy
    networks:
      - acidc-network

networks:
  acidc-network: {}
